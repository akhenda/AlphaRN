---
format_version: '4'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: react-native
trigger_map:
- push_branch: develop
  workflow: deploy-to-staging
- push_branch: "*"
  workflow: primary
- pull_request_target_branch: "*"
  workflow: primary
workflows:
  tests:
    after_run:
    - _tests_slack_message
    before_run:
    - _init_install
    - _unit_tests
    - _integration_and_e2e_debug_tests
    - _integration_and_e2e_release_tests
  primary:
    after_run: 
    before_run:
    - tests
    - _test_builds
  deploy-to-staging:
    after_run: 
    before_run:
    - primary
    - _semantic_release
    - _make_apk
    - _xcode_archive
    - _deploy_to_beta_testers
  _init_install:
    description: Do initial setup
    steps:
    - activate-ssh-key: {}
    - git-clone:
        title: Git Clone Repo
    - script:
        title: To build or not to build
        inputs:
        - content: |-
            #!/usr/bin/env bash

            # fail if any commands fails
            set -e

            # debug log
            set -x

            if [[ "$GIT_CLONE_COMMIT_MESSAGE_SUBJECT" == *"[skip ci]"* ]] ; then
              envman add --key PROCEED_WITH_DEPLOYMENT --value 0
            else
              envman add --key PROCEED_WITH_DEPLOYMENT --value 1
            fi
    - npm:
        title: Install npm-cache
        inputs:
        - command: install -g npm-cache
    - cache-pull: {}
    - script:
        title: npm-cache install
        inputs:
        - content: |-
            #!/usr/bin/env bash

            npm-cache install --cacheDirectory .
    - cache-push:
        inputs:
        - cache_paths: "./npm"
    - install-react-native: {}
    - npm:
        title: Install Detox CLI
        inputs:
        - command: install -g detox-cli
    - npm:
        title: Install Semantic Release
        inputs:
        - command: install -g semantic-release@12
    - script:
        title: Install Detox Utils
        inputs:
        - content: |-
            #!/usr/bin/env bash

            brew tap facebook/fb
            export CODE_SIGNING_REQUIRED=NO
            brew install fbsimctl

            brew tap wix/brew
            brew install applesimutils --HEAD
  _unit_tests:
    description: Run all unit tests
    steps:
    - script:
        title: Run Unit Tests
        inputs:
        - content: |-
            #!/usr/bin/env bash

            npm run validate
        is_always_run: true
  _integration_and_e2e_debug_tests:
    description: Run all Integration and E2E Debug App Tests using Detox
    steps:
    - script:
        title: Detox - Build Android Debug App
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox build --configuration android.emu.debug
    - script:
        title: Detox - Build iOS Debug App
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox build --configuration ios.sim.debug
    - script:
        title: Detox - Run Android E2E Debug Tests
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox test --configuration android.emu.debug --cleanup
    - script:
        title: Detox - Run iOS E2E Debug Tests
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox test --configuration ios.sim.debug --cleanup
  _integration_and_e2e_release_tests:
    description: Run all Integration and E2E Release App Tests using Detox
    steps:
    - script:
        title: Detox - Build Android Release App
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox build --configuration android.emu.release
    - script:
        title: Detox - Build iOS Release App
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox build --configuration ios.sim.release
    - script:
        title: Detox - Run Android E2E Release Tests
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox test --configuration android.emu.release --cleanup
    - script:
        title: Detox - Run iOS E2E Release Tests
        inputs:
        - content: |-
            #!/usr/bin/env bash

            detox test --configuration ios.sim.release --cleanup
  _tests_slack_message:
    steps:
    - slack:
        title: Slack - Send Build Status
        inputs:
        - channel: "#bitrise-builds"
        - from_username_on_error: Bitrise CI - Tests Shall Not Pass!!
        - from_username: Bitrise CI - Unit & E2E Tests Passed
        - message: |-
            *Build succeeded*: $BITRISE_GIT_MESSAGE
            *Branch*: $BITRISE_GIT_BRANCH
        - message_on_error: |-
            *Build failed*: $BITRISE_GIT_MESSAGE
            *Branch*: $BITRISE_GIT_BRANCH
        - webhook_url: "$SLACK_WEBHOOK_URL"
  _semantic_release:
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash

            semantic-release
        title: Run Semantic Release
  _make_apk:
    steps:
    - script:
        title: Gradlew Release
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash

            export ENVFILE=$ENVFILE && cd android && ./gradlew assembleRelease
    - sign-apk:
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
        inputs:
        - apk_path: "/bitrise/src/android/app/build/outputs/apk/app-release-unsigned.apk"
    - script:
        title: Copy APK to Deploy Directory
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
        inputs:
        - content: |-
            #!/usr/bin/env bash

            cp $BITRISE_SIGNED_APK_PATH $BITRISE_DEPLOY_DIR/signed-app-release.apk
  _test_builds:
    steps:
    - react-native-bundle@1.0.3:
        inputs:
        - assetRoots: android/app/src/main/assets
        - platform: android
        - entry_file: index.js
        title: Test Building Android App
    - react-native-bundle@1.0.3:
        inputs:
        - assetRoots: ''
        - entry_file: index.js
        title: Test Building iOS App
  _xcode_archive:
    steps:
    - certificate-and-profile-installer:
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
    - xcode-archive:
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
  _deploy_to_beta_testers:
    steps:
    - deploy-to-bitrise-io:
        is_always_run: false
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
        inputs:
        - notify_user_groups: none
        - notify_email_list: 
    - testfairy-deploy:
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
        inputs:
        - api_key: "$TEST_FAIRY_API_KEY"
    - testfairy-deploy-android:
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
    - applivery-android:
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
    - applivery-ios:
        run_if: '{{enveq "PROCEED_WITH_DEPLOYMENT" "1"}}'
app:
  envs:
  - opts:
      is_expand: false
    GRADLE_BUILD_FILE_PATH: android/build.gradle
  - opts:
      is_expand: false
    GRADLEW_PATH: android/gradlew
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: ios/AlphaRN.xcodeproj
  - opts:
      is_expand: false
    BITRISE_SCHEME: AlphaRN
  - opts:
      is_expand: false
    BITRISE_EXPORT_METHOD: development
